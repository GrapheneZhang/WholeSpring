<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
  		http://www.springframework.org/schema/beans
  		http://www.springframework.org/schema/beans/spring-beans.xsd
  		http://www.springframework.org/schema/context
  		http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/aop 
  		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
        
	<!-- 声明使用注解的风格 -->
	<context:annotation-config />
	<!-- 开启mvc注解 -->
	<mvc:annotation-driven />
	<!-- 允许对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源(js/image)的访问 -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/commons/**" location="/commons/" />
	
	<!-- 默认扫描的包路径 -->
	<context:component-scan base-package="com.nuw.online"></context:component-scan>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>   
	
	<bean id="resultCodeUtil" class="com.base.platform.framework.rest.ResultCodeUtil">
		<property name="cache" ref="resultCodeUtilCache" />
	</bean>
	<bean id="com.river.common.BeanFactoryUtils" class="com.base.platform.framework.rest.BeanFactoryUtils"/>
	<bean id="resultCodeUtilCache" class="com.base.platform.framework.rest.StaticPropertiesDataCache" scope="prototype">
		<property name="location" value="classpath:conf/resultcode.properties" />
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	<!-- ExceptionHandler -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!--  setting special errorView for PC and mobile  -->
		<property name="exceptionMappings">
			<props>
				<prop key="com.base.platform.framework.exception.ApsException"></prop>
				<prop key="com.base.platform.framework.exception.ApsException"></prop>
			</props>
		</property>
		<!-- 定义默认的异常处理页面 
		<property name="defaultErrorView" value="error.jsp"/>-->
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"/>
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
	</bean>
	
	<!-- 1.1 配置eh缓存管理器工厂 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		 <property name="configLocation" value="classpath:conf/ehcache.xml" />
	</bean>
	<!-- 1.2 配置eh缓存工厂 -->
	<bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	    <property name="cacheManager" ref="cacheManager" />
	    <!-- 使用缓存 关联ehcache.xml中的缓存配置 -->
	    <property name="cacheName" value="dictionaryCache" />
	</bean>
	
	<!-- 2.1 配置一个缓存拦截器对象，处理具体的缓存业务 -->
	<bean id="methodCacheInterceptor" class="com.nuw.online.utils.MethodCacheInterceptor2">
	    <property name="cache" ref="ehCache"/>
	</bean>
	<!-- 2.2 参与缓存的切入点对象 (切入点对象，确定何时何地调用拦截器) -->
	<bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
	    <!-- 配置缓存aop切面 -->
	    <property name="advice" ref="methodCacheInterceptor" />
	    <!-- 配置哪些方法参与缓存策略 -->
	    <!--  
	        .表示符合任何单一字元                  
	        ###  +表示符合前一个字元一次或多次                  
	        ###  *表示符合前一个字元零次或多次                  
	        ###  \Escape任何Regular expression使用到的符号
	    -->                 
	    <!-- .*表示前面的前缀(包括包名) 表示print方法-->
	    <property name="patterns">
	        <list>
	            <value>com.bankht.rest.nuw.channel.service.DictionaryService.findDictionaryByType</value>
	        </list>
	    </property>
	</bean>
</beans>